-- ==========================================
-- SCRIPT D'INITIALISATION SUSHIWAN DATABASE
-- ==========================================
-- Ce script s'ex√©cute automatiquement au premier d√©marrage de PostgreSQL
-- Il pr√©pare la base de donn√©es avec les extensions et configurations n√©cessaires

-- Connexion √† la base principale
\c sushiwan_db;

-- ==========================================
-- INSTALLATION DES EXTENSIONS POSTGRESQL
-- ==========================================

-- Extension UUID pour g√©n√©rer des identifiants uniques
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
-- Usage : uuid_generate_v4() pour cr√©er des UUIDs

-- Extension pour les fonctions de texte avanc√©es
CREATE EXTENSION IF NOT EXISTS "unaccent";
-- Usage : recherche insensible aux accents (caf√© = cafe)

-- Extension pour la recherche full-text multilingue
CREATE EXTENSION IF NOT EXISTS "pg_trgm";
-- Usage : recherche floue et suggestion de produits

-- ==========================================
-- CONFIGURATION DES PARAM√àTRES
-- ==========================================

-- D√©finir le fuseau horaire par d√©faut (Tunisie)
SET timezone = 'Africa/Tunis';

-- Configuration pour le support multilingue optimal
SET client_encoding = 'UTF8';

-- ==========================================
-- FONCTIONS UTILITAIRES PERSONNALIS√âES
-- ==========================================

-- Fonction pour nettoyer et normaliser les cha√Ænes de recherche
CREATE OR REPLACE FUNCTION normalize_search_text(input_text TEXT)
RETURNS TEXT AS $$
BEGIN
    -- Convertir en minuscules, supprimer accents et caract√®res sp√©ciaux
    RETURN lower(unaccent(trim(input_text)));
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- Fonction pour g√©n√©rer des slugs (URLs amicales)
CREATE OR REPLACE FUNCTION generate_slug(input_text TEXT)
RETURNS TEXT AS $$
BEGIN
    -- Convertir en slug : "Sushi D√©licieux" -> "sushi-delicieux"
    RETURN lower(
        regexp_replace(
            unaccent(trim(input_text)), 
            '[^a-zA-Z0-9]+', 
            '-', 
            'g'
        )
    );
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- Fonction pour calculer la distance de recherche
CREATE OR REPLACE FUNCTION search_similarity(text1 TEXT, text2 TEXT)
RETURNS FLOAT AS $$
BEGIN
    -- Utilise l'extension pg_trgm pour calculer la similarit√©
    RETURN similarity(normalize_search_text(text1), normalize_search_text(text2));
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- ==========================================
-- TRIGGERS POUR AUDIT ET LOGGING
-- ==========================================

-- Fonction g√©n√©rique pour audit des modifications
CREATE OR REPLACE FUNCTION audit_trigger_function()
RETURNS TRIGGER AS $$
BEGIN
    -- Pour les UPDATE, log les anciennes et nouvelles valeurs
    IF TG_OP = 'UPDATE' THEN
        INSERT INTO audit_log (
            table_name,
            operation,
            old_values,
            new_values,
            user_id,
            timestamp
        ) VALUES (
            TG_TABLE_NAME,
            TG_OP,
            row_to_json(OLD),
            row_to_json(NEW),
            current_setting('app.current_user_id', true)::INTEGER,
            NOW()
        );
        RETURN NEW;
    END IF;
    
    -- Pour les INSERT
    IF TG_OP = 'INSERT' THEN
        INSERT INTO audit_log (
            table_name,
            operation,
            new_values,
            user_id,
            timestamp
        ) VALUES (
            TG_TABLE_NAME,
            TG_OP,
            row_to_json(NEW),
            current_setting('app.current_user_id', true)::INTEGER,
            NOW()
        );
        RETURN NEW;
    END IF;
    
    -- Pour les DELETE
    IF TG_OP = 'DELETE' THEN
        INSERT INTO audit_log (
            table_name,
            operation,
            old_values,
            user_id,
            timestamp
        ) VALUES (
            TG_TABLE_NAME,
            TG_OP,
            row_to_json(OLD),
            current_setting('app.current_user_id', true)::INTEGER,
            NOW()
        );
        RETURN OLD;
    END IF;
    
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- ==========================================
-- INDEXES PR√âLIMINAIRES POUR PERFORMANCE
-- ==========================================

-- Ces indexes seront recr√©√©s automatiquement par Sequelize
-- mais on peut en d√©finir des sp√©cifiques ici

-- Notification de fin d'initialisation
DO $$
BEGIN
    RAISE NOTICE '‚úÖ Base de donn√©es SushiWan initialis√©e avec succ√®s !';
    RAISE NOTICE 'üè∑Ô∏è  Extensions install√©es : uuid-ossp, unaccent, pg_trgm';
    RAISE NOTICE '‚öôÔ∏è  Fonctions utilitaires cr√©√©es';
    RAISE NOTICE 'üìç Fuseau horaire : Africa/Tunis';
END $$;
